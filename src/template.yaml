AWSTemplateFormatVersion: '2010-09-09'
Outputs:
  DeploymentHistoryTag:
    Description: Stackery Deployment History Tag
    Value: D7AW0V
Parameters:
  EnvironmentAPIGatewayStageName:
    Default: test
    Description: Environment name used for API Gateway Stage names (injected by Stackery
      at deployment time)
    Type: String
  EnvironmentTagName:
    Default: test
    Description: Environment Name (injected by Stackery at deployment time)
    Type: String
  StackTagName:
    Default: stackerytest
    Description: Stack Name (injected by Stackery at deployment time)
    Type: String
Resources:
  DeploymentMarkerTagD7AW0V:
    Type: AWS::CloudFormation::WaitConditionHandle
  Items:
    DependsOn: DeploymentMarkerTagD7AW0V
    Properties:
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
    Type: AWS::DynamoDB::Table
  QuickstartApi:
    DependsOn: DeploymentMarkerTagD7AW0V
    Properties:
      Cors:
        AllowHeaders: '''Authorization,Content-Type'''
        AllowOrigin: '''*'''
      DefinitionBody:
        info: {}
        paths:
          /items:
            get:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getItems.Arn}/invocations
          /newItems:
            post:
              responses: {}
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${newItem.Arn}/invocations
        swagger: '2.0'
      EndpointConfiguration: REGIONAL
      Name:
        Fn::Sub:
        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}
        - ResourceName: QuickstartApi
      StageName:
        Ref: EnvironmentAPIGatewayStageName
      TracingEnabled: true
    Type: AWS::Serverless::Api
  getItems:
    DependsOn: DeploymentMarkerTagD7AW0V
    Properties:
      CodeUri: s3://stackery-assetsbucket-pjxxqiong9zt/deployments/test/stackerytest/functions/92ed1286b21a75adaf506ec42f989d7b
      Description:
        Fn::Sub:
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: getItems
      Environment:
        Variables:
          TABLE_ARN:
            Fn::GetAtt:
            - Items
            - Arn
          TABLE_NAME:
            Ref: Items
      Events:
        QuickstartApiGETitems:
          Properties:
            Method: GET
            Path: /items
            RestApiId:
              Ref: QuickstartApi
          Type: Api
      FunctionName:
        Fn::Sub: ${AWS::StackName}-getItems
      Handler: getItems.handler
      MemorySize: 3008
      Policies:
      - AWSXrayWriteOnlyAccess
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Items
      Runtime: nodejs12.x
      Timeout: 30
      Tracing: Active
    Type: AWS::Serverless::Function
  newItem:
    DependsOn: DeploymentMarkerTagD7AW0V
    Properties:
      CodeUri: s3://stackery-assetsbucket-pjxxqiong9zt/deployments/test/stackerytest/functions/afb9c21bf3c8aad35820e17a9e4c1691
      Description:
        Fn::Sub:
        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}
        - ResourceName: newItem
      Environment:
        Variables:
          TABLE_ARN:
            Fn::GetAtt:
            - Items
            - Arn
          TABLE_NAME:
            Ref: Items
      Events:
        QuickstartApiPOSTnewItems:
          Properties:
            Method: POST
            Path: /newItems
            RestApiId:
              Ref: QuickstartApi
          Type: Api
      FunctionName:
        Fn::Sub: ${AWS::StackName}-newItem
      Handler: newItem.handler
      MemorySize: 3008
      Policies:
      - AWSXrayWriteOnlyAccess
      - DynamoDBCrudPolicy:
          TableName:
            Ref: Items
      Runtime: nodejs12.x
      Timeout: 30
      Tracing: Active
    Type: AWS::Serverless::Function
Transform: AWS::Serverless-2016-10-31
